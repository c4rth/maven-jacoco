trigger: none

resources:
  repositories:
    - repository: repojacoco
      type: github
      ref: main
      name: c4rth/maven-jacoco
      endpoint: carthx


jobs:
  - job: Build1
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      #- task: Maven@4
      #  inputs:
      #    mavenPomFile: 'pom.xml'
      #    goals: 'clean package'
      #    publishJUnitResults: true
      #    testResultsFiles: '**/surefire-reports/TEST-*.xml'
      #    javaHomeOption: 'JDKVersion'
      #    jdkVersionOption: '1.21'
      #    mavenVersionOption: 'Default'
      #    mavenOptions: '-Xmx3072m'
      #    mavenAuthenticateFeed: false
      #    effectivePomSkip: false
      #    sonarQubeRunAnalysis: false
                
#      - task: Maven@4
#        inputs:
#          mavenPomFile: 'pom.xml'
#          options: '-Dmaven.clean.skip=true -DdummyParam1=dummyValue1 -DdummyParam2=dummyValue2'
#          goals: 'verify'
#          publishJUnitResults: true
#          codeCoverageToolOption: 'JaCoCo'
#          javaHomeOption: 'JDKVersion'
#          jdkVersionOption: '1.21'
#          mavenVersionOption: 'Default'
#          mavenOptions: '-Xmx3072m'
#          mavenAuthenticateFeed: false
#          effectivePomSkip: false
#          sonarQubeRunAnalysis: false

      #- task: PublishCodeCoverageResults@2
      #  inputs:
      #    summaryFileLocation: 'code-coverage/target/site/jacoco-aggregate/jacoco.xml'
      #    pathToSources: 'src/main/java/com/training/example/JacocoExample'
      - checkout: self
      - checkout: repojacoco
      - task: PowerShell@2
        name: SetVar
        inputs:
          targetType: 'inline'
          script: |
            # Write your PowerShell commands here.
            
            $dirs = Get-ChildItem -Path "." -Recurse
            $param = @()
            
            foreach ($dir in $dirs) {
              Write-Host $dir.FullName
              $param += @{
                FullName=$dir.FullName
                BaseName=$dir.BaseName
              }    
            }

            Write-Host $param
            $paramJson = ConvertTo-Json $param -Compress
            Write-Host "##vso[task.setvariable variable=MY_PARAM;isOutput=true]$paramJson"
    
  - job: Build2
    dependsOn: Build1
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      - name: PASSED_PARAM
        value: $[ dependencies.Build1.outputs['SetVar.MY_PARAM'] ]
    steps:
      - checkout: self
      - checkout: repojacoco
#      - task: PowerShell@2
#        inputs:
#          targetType: 'inline'
#          script: |
#            $dirs = Get-ChildItem -Path "." -Recurse
#            foreach ($dir in $dirs) {
#              Write-Host $dir.FullName
#            }
#            Write-Host "*************"
#            $x = $Env:PASSED_PARAM
#            $files = ConvertFrom-Json $x
#            foreach ($file in $files) {
#              Write-Host $file.FullName $file.BaseName
#            }
      - bash: |
          pwd
          ls -al
          ls -al maven-jacoco
          ls -al maven-jacoco/devops
      - script: |
          echo "Sample Report TXT" > $(Pipeline.Workspace)/report1.txt
          echo "Line1" >> $(Pipeline.Workspace)/report1.txt
          echo "Line2" >> $(Pipeline.Workspace)/report1.txt
          echo "Line3" >> $(Pipeline.Workspace)/report1.txt
        displayName: 'Generate Sample TXT Report 1'
      - script: |
          echo "<h1>Sample Report HTML</h1><ul><li>line 1</li><li>line 2</li><li>line 3</li></ul>" > $(Pipeline.Workspace)/report2.html
        displayName: 'Generate Sample HTML Report 2'
      - script: |
          echo "# Sample Report Markdown" > $(Pipeline.Workspace)/summary.md
          echo "This is the **summary** of the report." >> $(Pipeline.Workspace)/summary.md
        displayName: 'Generate Markdown Report'
      - script: |
          cp ./repojacoco/devops/report.html $(Pipeline.Workspace)/spectral-report.html
        displayName: 'Generate Spectral Report'

      - script: |
          echo "##vso[task.addattachment type=Distributedtask.Core.Summary;name=TXT Report 1;]$(Pipeline.Workspace)/report1.txt"
        displayName: 'Attach HTML Report 1 to Summary'
      - script: |
          echo "##vso[task.addattachment type=Distributedtask.Core.Summary;name=HTML Report 2;]$(Pipeline.Workspace)/report2.html"
        displayName: 'Attach HTML Report 2 to Summary'
      - script: |
          echo "##vso[task.uploadsummary]$(Pipeline.Workspace)/summary.md"
        displayName: 'Attach Markdown Summary'
      - script: |
          echo "##vso[task.addattachment type=Distributedtask.Core.Summary;name=Spectral Report 1;]$(Pipeline.Workspace)/spectral-report.html"
        displayName: 'Attach Spectral HTML Report to Summary'
